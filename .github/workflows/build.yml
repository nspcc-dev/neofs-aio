name: Build

on:
  pull_request:
    branches:
      - master
    types: [opened, synchronize]
    paths-ignore:
      - '**/*.md'
  push:
    # Build for the master branch.
    branches:
      - master
  workflow_dispatch:
    inputs:
      ref:
        description: 'Ref to build the binary [default: latest master; examples: v0.10.0, 0a4ff9d3e4a9ab432fd5812eb18c98e03b5a7432]'
        required: false
        default: ''
      push_image:
        description: 'Push images to DockerHub [default: false; examples: true, false]'
        required: false
        default: 'false'
      use_latest_tag:
        description: 'Use `latest` tag while pushing images to DockerHub [default: false; examples: true, false]'
        required: false
        default: 'false'

jobs:
  build_image:
    name: Build Docker image
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.ref }}
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        if: ${{ github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && github.event.inputs.push_image == 'true') }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Set version
        id: setver
        run: cat .env >> $GITHUB_OUTPUT

      - name: Set latest tag
        id: setlatest
        if: ${{ github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && github.event.inputs.use_latest_tag == 'true') }}
        run: echo "latest=,nspccdev/neofs-aio:latest" >> $GITHUB_OUTPUT

      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: ${{ github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && github.event.inputs.push_image == 'true') }}
          platforms: linux/amd64,linux/arm64
          build-args: |
            NEOGO_HUB_IMAGE=nspccdev/neo-go
            NEOGO_HUB_TAG=${{ steps.setver.outputs.NEOGO_VERSION }}
            NEOFS_HUB_IMAGE=nspccdev/neofs
            NEOFS_HUB_TAG=${{ steps.setver.outputs.AIO_VERSION }}
            NEOFS_REST_HUB_TAG=${{ steps.setver.outputs.RESTGW_VERSION }}
          tags: nspccdev/neofs-aio:${{ steps.setver.outputs.AIO_VERSION }}${{ steps.setlatest.outputs.latest }}
